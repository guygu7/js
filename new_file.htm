<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="zh-CN">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Bootstrap 101 Template</title>
		<link href="test.css" rel="stylesheet">
	</head>
	<body>
		<div id="mainDesktop" class="main-desktop"></div>
		<script src="jquery-3.2.1/jquery-3.2.1.min.js"></script>
		<script src="js/core.js"></script>
		<script src="js/BasicComponent.js"></script>
		<script src="js/Components.js"></script>
		<script src="js/Menu.js"></script>
		<script src="js/Scene.js"></script>
		<script src="js/internalScene.js"></script>
		<script src="js/panel.js"></script>
		<script src="js/button.js"></script>
		<script src="js/table.js"></script>
		<script src="js/corner.js"></script>
		<script src="js/progressbar.js"></script>
		<script src="js/infoDIV.js"></script>
		<script src="js/dataModel.js"></script>
		<script>
			//构建主界面
			var scene = LC.Components.SceneFactory.createScene();
			$("#mainDesktop").append(scene.dom);
			$("#mainDesktop").append(LC.infoObj.dom);
			//布局面板渲染
			var panel1 = LC.Components.PanelFactory.createPanelBasic(null,"170px","565px");
			var panel2 = LC.Components.PanelFactory.createPanelEmpty(null,"918px","416px");
			var panel3 = LC.Components.PanelFactory.createPanelBasic(null,"904px","145px");
			//var panel4 = LC.Components.PanelFactory.createPanelBasic();
			var internalSceneBasic = LC.Components.InternalSceneFactory.createInternalSceneBasic(null,"904px","404px");
			//内部据点界面
			var internalSceneStronghold = LC.Components.InternalSceneFactory.createInternalSceneBasic(null,"904px","404px");
			internalSceneStronghold.hide();//初始隐藏
			panel2.dom.append(internalSceneBasic.dom).append(internalSceneStronghold.dom);
			scene.dom.append(panel1.dom).append(panel2.dom).append(panel3.dom);
			/*==========活动栏位===========*/
			var itemBag = LC.Components.PanelFactory.createPanelTransparent(null, "445px", "300px");
			var closeBut = LC.Components.ButtonFactory.createButtonClose(null, itemBag);
			var titel = LC.Components.PanelFactory.createPanelTitle().setText("物品栏");
			itemBag.dom.append(closeBut.dom).append(titel.dom);
			itemBag.addPosition("upperright").addPositionMode("absolute");
			itemBag.hide();
			LC.Components.ComponentFunction.drag(titel, itemBag, scene);
			scene.dom.append(itemBag.dom);
			//添加内容
			var table = LC.Components.TableFactory.createTable(1, 40);
			/*
			 var cell = LC.Components.PanelFactory.createPanelBasic("??");
			 cell.dom.css({"width":"90%","height":"90%"});
			 table.setCell(1,1,cell);
			 var corner = LC.Components.CornerSignFactory.createCornerSign();
			 cell.dom.append(corner.dom);

			 cell.dom.testp = "测试属性1";

			 corner.dom.append("99");
			 cell.item = item1;
			 */
			itemBag.dom.append(table.dom);
			/*==========活动栏位2===========*/
			/*
			 var itemBag2 = LC.Components.PanelFactory.createPanelTransparent(null,"445px","300px");
			 var closeBut2 = LC.Components.ButtonFactory.createButtonClose(null,itemBag2);
			 var titel2 = LC.Components.PanelFactory.createPanelTitle().setText("物品栏2");
			 itemBag2.dom.append(closeBut2.dom).append(titel2.dom);
			 itemBag2.addPosition("upperright").addPositionMode("absolute");
			 itemBag2.hide();
			 LC.Components.ComponentFunction.drag(titel2,itemBag2,scene);
			 scene.dom.append(itemBag2.dom);
			 //添加内容
			 var table2 = LC.Components.TableFactory.createTable(4,10);
			 var cell2 = LC.Components.PanelFactory.createPanelBasic("wupin");
			 cell2.dom.css({"width":"90%","height":"90%"});
			 table.setCell(3,1,cell2);
			 var corner2 = LC.Components.CornerSignFactory.createCornerSign();
			 cell2.dom.append(corner2.dom);

			 corner2.dom.append("99");
			 itemBag2.dom.append(table2.dom);
			 //====拖拽测试====
			 LC.Components.ComponentFunction.drag(cell,cell,scene,cell2,true);
			 */
			/*==========菜单============*/
			var menu = LC.Components.DropdownFactory.createDropdownUp();
			menu.addElement(0, "菜单");
			menu.addPosition("lowerright");
			menu.addElement(1, "物品");
			menu.addElement(2, "物品2");
			menu.getElement(1).dom.bind("click", function() {
				console.log("1");
				itemBag.show();
			});
			menu.getElement(2).dom.bind("click", function() {
				itemBag2.show();
			});
			internalSceneBasic.dom.append(menu.dom);
			//========

			/*====进度条====*/
			/*
			var progress = LC.Components.ProgressBarFactory.createProgressBar1();
			progress.addPosition("lowerleft").setSize("500px", "10px");
			internalSceneBasic.dom.append(progress.dom);
			//===模拟===
			var but = $("<div>but1</div>").css({
				"width" : "30px",
				"height" : "20px",
				"background-color" : "#474B64"
			}).bind("click", function() {
				progress.setRunWidth(10, 1);
				progress.setRunWidth(10, 2);
				progress.start();
			});
			internalSceneBasic.dom.append(but);
			*/
			//========
			//sceneNext.hide();
			scene.show();

			//var info = LC.Components.InfoDIVFactory.createInfoDIV();
			//itemBag.addInfo();
			LC.Components.ComponentFunction.addInfo(itemBag);

			//构建数据层
			//基本数据
			var mapX=256;
			var mapY=256;
			//构建地图
			map = LC.Data.MapFactory.createMap(mapX,mapY);
			//初始地点,随机设置一个初始地点,限制在大地图中间生成
			var initX = Math.floor(Math.random()*(Math.floor(mapX*2/3)));
			if (initX<(Math.floor(mapX*1/3))){
				initX=(Math.floor(mapX*1/3));
			}
			var initY = Math.floor(Math.random()*(Math.floor(mapY*2/3)));
			if (initY<(Math.floor(mapY*1/3))){
				initY=(Math.floor(mapY*1/3));
			}
			map.get(initX+","+initY).setName("出生地").setType(LC.Data.CommonProperty.PLAT.PLAT_TYPE.HOME);
			//在初始地点构建据点
			map.get(initX+","+initY).setLink("stronghold");
			//在地图上构建其他据点
			//地图上分布物体======未完成===========
			
			//******创建角色实例，角色面板视图实例，并绑定*****
			//创建角色
			var gameplayer = new LC.Data.RoleFactory.createRole();
			//在左侧面板中增加角色信息板
			var rolePanel = LC.Components.PanelFactory.createPanelBasic(null,"160px","80px",LC.CommonProperty.CSS_PANEL_PROTRUDING);
			panel1.dom.append(rolePanel.dom);
			//角色信息板中添加各种数据显示
			rolePanel.dom.append($("<div id='name'></div>"));
			rolePanel.dom.append($("<div id='health'></div>"));
			//将角色信息板 视图实例 监听 数据实例 
			gameplayer.addListener(rolePanel);
			//设定视图响应
			rolePanel.addResponseMethod("setName",function(pram){
				rolePanel.dom.children("#name").text(pram);
			});
			rolePanel.addResponseMethod("setHealth",function(pram){
				rolePanel.dom.children("#health").text(pram);
			});
			//初始化玩家角色数据
			gameplayer.init().setName("玩家名称").setType(LC.Data.CommonProperty.ROLE.ROLE_TYPE.PLAYER);
			console.log(gameplayer.getHealth());
			//*****************************
			
			//**********大地图界面，视图构建*********
			/**
			 * 定义当前所在地图变量
			 */
			var nowplat = map.get(initX+","+initY);
			//主面板加入各种显示及按钮,同时绑定事件
			/**
			 * 向北移动的按钮 
			 */
			var moveNorth = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			internalSceneBasic.dom.append(moveNorth.dom);
			moveNorth.dom.bind("click",function(){//点击进行位置移动
				if(nowplat.getLink().get("top")=="true"){//判断是否可以移动
					nowplat = map.get(nowplat.getPositionX()+","+(Number(nowplat.getPositionY())-1));
					internalSceneLoadData(nowplat);
				}
			});
			/**
			 * 向东移动的按钮 
			 */
			var moveEast = LC.Components.PanelFactory.createPanelBasic(null,"40px","25px");
			internalSceneBasic.dom.append(moveEast.dom);
			moveEast.dom.bind("click",function(){//点击进行位置移动
				if(nowplat.getLink().get("right")=="true"){//判断是否可以移动
					nowplat = map.get((Number(nowplat.getPositionX())-1)+","+nowplat.getPositionY());
					internalSceneLoadData(nowplat);
				}
			});
			/**
			 * 向南移动的按钮 
			 */
			var moveSouth = LC.Components.PanelFactory.createPanelBasic(null,"40px","25px");
			internalSceneBasic.dom.append(moveSouth.dom);
			moveSouth.dom.bind("click",function(){//点击进行位置移动
				if(nowplat.getLink().get("bottom")=="true"){//判断是否可以移动
					nowplat = map.get(nowplat.getPositionX()+","+(Number(nowplat.getPositionY())+1));
					internalSceneLoadData(nowplat);
				}
			});
			/**
			 * 向西移动的按钮 
			 */
			var moveWest = LC.Components.PanelFactory.createPanelBasic(null,"40px","25px");
			internalSceneBasic.dom.append(moveWest.dom);
			moveWest.dom.bind("click",function(){//点击进行位置移动
				if(nowplat.getLink().get("left")=="true"){//判断是否可以移动
					nowplat = map.get((Number(nowplat.getPositionX())-1)+","+nowplat.getPositionY());
					internalSceneLoadData(nowplat);
				}
			});
			/**
			 * 坐标显示面板 
			 */
			var info = LC.Components.PanelFactory.createPanelBasic(null,"80px","25px");
			internalSceneBasic.dom.append(info.dom);
			/**
			 * 进入 
			 */
			var enter = LC.Components.PanelFactory.createPanelBasic(null,"80px","25px");
			internalSceneBasic.dom.append(enter.dom);
			enter.dom.bind("click",function(){//点击进行位置移动
				//判断是否可以进入（未实现）
				//进入，隐藏当前内部场景-大地图界面，显示-内部据点界面
				internalSceneBasic.hide();
				internalSceneStronghold.show();
				//移动菜单
				internalSceneStronghold.dom.append(menu.dom);
			});
			/**
			 *  传入plat地图实例,内部场景-大地图界面装入地图数据，同时绑定监听（用于更新界面数据）
			 */
			internalSceneLoadData = function (plat){
				moveNorth.dom.text(plat.getLink().get("top")=="true"?"向北":"X");
				moveEast.dom.text(plat.getLink().get("right")=="true"?"向东":"X");
				moveSouth.dom.text(plat.getLink().get("bottom")=="true"?"向南":"X");
				moveWest.dom.text(plat.getLink().get("left")=="true"?"向西":"X");
				info.dom.text(plat.getPositionX()+","+plat.getPositionY());
				enter.dom.text("进入");
				plat.addListener(internalSceneBasic);
			};
			//**********************************
			
			//启动时初次载入地图数据
			internalSceneLoadData(nowplat);
			
			//*********内部据点界面，视图构建***********
			//定义可交互对象承载视图框
			var interactiveObject1 = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			var interactiveObject2 = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			var interactiveObject3 = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			//定义移动按钮，移动到其他地方
			//返回地图
			var moveReturn = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			internalSceneStronghold.dom.append(moveReturn.dom);
			moveReturn.dom.bind("click",function(){//点击进行位置移动
				//判断是否可以返回（未实现）
				//返回，隐藏当前内部场景-内部据点界面，显示-大地图界面
				internalSceneBasic.show();
				internalSceneStronghold.hide();
				//移动菜单
				internalSceneBasic.dom.append(menu.dom);
			});
			//可能移动至其他地方
			var move1 = LC.Components.PanelFactory.createPanelBasic("","40px","25px");
			
			/**
			 *  传入plat地图实例,内部场景-内部据点界面装入地图数据，同时绑定监听（用于更新界面数据）
			 */
			internalSceneStrongholdLoadData = function (plat){
				moveReturn.dom.text("返回大地图");
				plat.addListener(internalSceneStronghold);
			};
			//************************************
			//启动时初次载入地图数据
			internalSceneStrongholdLoadData(nowplat);
			
			//**********交互对象交互界面，视图构建*********
			//************************************
			
			//***********战斗界面，视图构建*************
			//************************************
			
			//动态数据、实时存档
			LC.Data.DynamicData={};
			LC.Data.DynamicData.Map=map;//保存地图
			LC.Data.DynamicData.Home=initX+","+initY;//保存初始地点位置
			LC.Data.DynamicData.PlayerRole=gameplayer;//保存玩家角色信息
			
			console.log(map.get(LC.Data.DynamicData.Home));
			




		</script>
	</body>
</html>
