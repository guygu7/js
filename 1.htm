<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="zh-CN">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Bootstrap 101 Template</title>
		 <style type="text/css">
    </style>
</head>
<body>
	<div id = "div1"></div>
     <!--
     <div id="d1" style="width: 100px;height: 100px;background-color: red;position:absolute;">
          </div>
          <div id="d2" style="width: 100px;height: 100px;background-color: green;position:absolute;">
          </div>-->
     <script src="jquery-3.2.1/jquery-3.2.1.min.js"></script>
		<script src="js/core.js"></script>
		<script src="js/BasicComponent.js"></script>
		<script src="js/Components.js"></script>
		<script src="js/Menu.js"></script>
		<script src="js/Scene.js"></script>
		<script src="js/panel.js"></script>
		<script src="js/button.js"></script>
		<script src="js/table.js"></script>
		<script src="js/corner.js"></script>
		<script src="js/progressbar.js"></script>
		<script src="js/dataModel.js"></script>
     <script> 
     /*
    	var stack = {};
    	x =10;y=10;
		var startKey = "1,1,"+x+","+y;
		if ((x - 1) >= 2 && (y - 1) >= 2) {//初次判断，初次计算
			//计算该区域的子区域xy上下限值，生成新的一组数据并放入stack
			var startValue = {1:1+","+ 1+","+ (1 + Math.floor((x - 1) / 2))+","+ (1 + Math.floor((y - 1) / 2))
			,2:(1 + Math.ceil((x - 1) / 2))+","+ 1+","+ x+","+ (1 + Math.floor((y - 1) / 2))
			,3:1+","+(1+Math.ceil((y - 1) / 2))+","+ (1 + Math.floor((x - 1) / 2))+","+y
			,4:(1 + Math.ceil((x - 1) / 2))+","+ (1 + Math.ceil((y - 1) / 2))+","+ x+","+ y};
		}
		stack[startKey]=startValue;
		stackKeys = Object.keys(stack);
		nowKey =  stackKeys[0];
	    nowValue = stack[nowKey];
    	console.log(nowValue);
    	nowKey2=2;
    	console.log(nowValue[nowKey2]);
    	*/
	map = LC.Data.MapFactory.createMap(256,256);
	temp = LC.Data.MapFactory.drawMap(map);
	$("#div1").append(temp);
	/*
	var stack = {
			"1,1,2,2" : ["1,n,n,n","2,n,n,n","3,n,n,n","4,n,n,n"],
		};
		var nowKey;
		var stackKeys = Object.keys(stack);
				for (var i=0; i < stackKeys.length; i++) {
				  nowKey =  stackKeys[i];
				  nowValue = stack[nowKey];
				console.log(nowKey);
				console.log(nowValue);
				};
				
				delete stack[nowKey];
				console.log(stack);
				*/
     </script>
</body>
</html>
